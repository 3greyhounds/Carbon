<?xml version="1.0"?>
<!--
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
   
       http://www.apache.org/licenses/LICENSE-2.0
   
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<package>
  <metadata>
    <id>Carbon</id>
    <title>Carbon</title>
    <version>2.3.0</version>
    <authors>Aaron Jensen</authors>
    <owners>Aaron Jensen</owners>
    <licenseUrl>http://www.apache.org/licenses/LICENSE-2.0</licenseUrl>
    <projectUrl>http://get-carbon.org</projectUrl>
    <iconUrl>http://get-carbon.org/icon.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <summary>Carbon is a PowerShell module for automating the configuration of Windows 7, 8, 2008, and 2012, Windows services, applications, and websites.</summary>
    <description>Carbon is a PowerShell module for automating the configuration Windows 7, 8, 2008, and 2012 and automation the installation and configuration of Windows applications, websites, and services. It can configure and manage:

 * Local users and groups
 * IIS websites, virtual directories, and applications
 * File system, registry, and certificate permissions
 * Certificates
 * Privileges
 * Services
 * Encryption
 * Junctions
 * Hosts file
 * INI files
 * Performance counters
 * Shares
 * .NET connection strings and app settings
 * And much more!

All functions are idempotent: when run multiple times with the same arguments, your system will be in the same state without failing or producing errors.</description>
    <language>en-us</language>
    <releaseNotes>
## Enhancements

 * Aded a `LiteralPath` parameter to `Test-PathIsJunction` for testing paths that contain wildcard characters (e.g. `[`, `]`, etc.).
 * `Remove-Junction` now supports removing multiple junctions with wildcards.
 * Added a `LiteralPath` parameter to `Remove-Junction` for deleting junctions whose paths contain wildcard characters (e.g. `[`, `]`, etc.).
 * Added a `LiteralPath` parameter to `Uninstall-Junction` for deleting junctions whose paths contain wildcard characters (e.g. `[`, `]`, etc.).
 * Created `Remove-DotNetAppSetting` function for removing app settings from .NET framework machine.config files.
 * Created `Read-File` function for reading text files and retrying if the read fails. Good for reading files that get intermittently locked, like the Windows hosts file.
 * Created `Write-File` function for writing text files and retrying if the write fails. Good for writing files that get intermittently locked, like the Windows hosts file.
 * Made the following functions obsolete:
   * `Get-WindowsFeature`
   * `Install-Msmq`
   * `Install-WindowsFeature`
   * `Resolve-WindowsFeatureName`
   * `Uninstall-WindowsFeature`

## Bug Fixes

 * Fixed: `Add-GroupMember`, over PowerShell remoting, fails to add a member to groups that have non-local users/groups (fixes [issue #187: Add-GroupMember fails when using PowerShell Remoting](https://bitbucket.org/splatteredbits/carbon/issues/187/add-groupmember-fails-when-using))
 * Fixed: `Remove-GroupMember`, over PowerShell remoting, fails to remove a member from groups that have non-local users/groups.
 * Fixed: `Test-PathIsJunction` returns multiple results if the `Path` parameter contains wildcards and matches multiple items.
 * Fixed: `Install-Junction` can't install a junction whose path contains wildcard characters (fixes [issue #190](https://bitbucket.org/splatteredbits/carbon/issues/190/install-junction-fails-when-the-path)).
 * Fixed: `New-Junction` writes wrong error when creating an existing junction whose path contains wildcard characters.
 * Fixed: `Install-Service` doesn't update/change an existing service's account when using the `Credential` parameter (fixes [issue #185](https://bitbucket.org/splatteredbits/carbon/issues/185/install-service-never-updates-logon-as-if)).
 * Fixed: `Uninstall-FileShare` fails if a share's physical path doesn't exist.
 * Fixed (hopefully): `Get-FileSharePermission` writes an error if a share's security information is corrupted (fixes [issue #188](https://bitbucket.org/splatteredbits/carbon/issues/188/get-filesharepermission-crashes-when-a)). I was unable to reproduce the error, and the error was reported anonyously, so I did my best.
 * Fixed: `Get-PowerShellModuleInstallPath` returns multiple paths if the standard PowerShell module path is listed twice in the `PSModulePath` environment variable.
 * Fixed: Chocolatey package fails if the standard PowerShell module path is listed twice in the`PSModulePath` environment (fixes [issue #192](https://bitbucket.org/splatteredbits/carbon/issues/192/installation-of-carbon-via-chocolatey)).
 * Fixed: `Get-PowerShellModuleInstallPath` doesn't return the module install path if it doesn't exist. Sometimes it doesn't yet.
 * Fixed: `Carbon_ScheduledTask` and `Carbon_IniFile` DSC resources' `Get-TargetResource` functions don't return correct resource properties and causes `Get-DscConfiguration` to fail (fixes [issue #193](https://bitbucket.org/splatteredbits/carbon/issues/193/get-targetresource-returns-taskname-in-its)).
 * Fixed: `Carbon_FirewallRule` DSC resource always re-installs a firewall rule if `Profile` property contains multiple values (i.e. it doesn't properly parse netsh output).
 * Fixed: `about_Carbon_Installation` help topic had a typo.
 * Fixed: `Set-HostsEntry` fails to stop when the hosts file is in use and can't be read.
 
</releaseNotes>
    <copyright>Copyright 2011 - 2016 Aaron Jensen.</copyright>
    <tags>.net acl active-directory certificates com compression computer credential cryptography directory dsc dsc-resources encryption environment file-system firewall groups hosts-file http identity iis ini installers internet-explorer ip junctions msi msmq netsh networking ntfs operating-system os path performance-counters powershell principal privileges programs registry rsa scheduled-tasks security service shares sid smb ssl text trusted-host users wcf windows windows-features xml zip PSModule DscResources setup automation admin</tags>
  </metadata>
  <files>
    <file src=".\Carbon\**\*" target="Carbon" exclude="**\*.pdb" />
    <file src=".\examples\**\*" target="Examples" />
    <file src=".\Website\**\*" target="Website" />
    <file src=".\Tools\chocolateyInstall.ps1" target="Tools" />
    <file src=".\Tools\chocolateyUninstall.ps1" target="Tools" />
    <file src=".\LICENSE.txt" target="" />
    <file src=".\NOTICE.txt" target="" />
    <file src=".\LICENSE.txt" target="Carbon" />
    <file src=".\NOTICE.txt" target="Carbon" />
    <file src=".\RELEASE NOTES.txt" target="" />
  </files>
</package>